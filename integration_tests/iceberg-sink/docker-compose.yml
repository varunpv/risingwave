---
version: "3"
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.6.2-python3.10
  build:
    context: .
    target: airflow
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
  volumes:
    - ./airflow_dags:/opt/airflow/dags
    - ./iceberg-compaction-sql:/opt/airflow/iceberg-compaction-sql
  depends_on:
    &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
x-spark-common:
  &spark-air
  build:
    context: .
    target: spark

services:
  spark:
    <<: *spark-air
    environment:
      - SPARK_MODE=master
    ports:
      - '7077:7077'
    volumes:
      - './spark-script:/spark-script'
  spark-worker:
    <<: *spark-air
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
  presto:
    build: ./presto-with-iceberg
    container_name: presto
  risingwave-standalone:
    extends:
      file: ../../docker/docker-compose.yml
      service: risingwave-standalone
  postgres-0:
    extends:
      file: ../../docker/docker-compose.yml
      service: postgres-0
  grafana-0:
    extends:
      file: ../../docker/docker-compose.yml
      service: grafana-0
  minio-0:
    extends:
      file: ../../docker/docker-compose.yml
      service: minio-0
  prometheus-0:
    extends:
      file: ../../docker/docker-compose.yml
      service: prometheus-0
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - MYSQL_DATABASE=mydb
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p123456" ]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: mysql
  prepare_mysql:
    image: mysql:8.0
    depends_on:
      - mysql
    command:
      - /bin/sh
      - -c
      - "mysql -p123456 -h mysql mydb < mysql_prepare.sql"
    volumes:
      - "./mysql_prepare.sql:/mysql_prepare.sql"
    container_name: prepare_mysql
    restart: on-failure
  datagen:
    build: ../datagen
    depends_on: [mysql]
    command:
      - /bin/sh
      - -c
      - /datagen --mode clickstream --qps 1 mysql --user mysqluser --password mysqlpw --host mysql --port 3306 --db mydb
    container_name: datagen
    restart: on-failure
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
  redis:
    image: 'redis:latest'
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
          condition: service_completed_successfully
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
          condition: service_completed_successfully
  airflow-worker:
    <<: *airflow-common
    command: celery worker
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
          condition: service_completed_successfully
  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_NAME: 'airflow'
      _AIRFLOW_WWW_USER_PASSWORD: 'airflow'

volumes:
  risingwave-standalone:
    external: false
  postgres-0:
    external: false
  grafana-0:
    external: false
  minio-0:
    external: false
  prometheus-0:
    external: false
name: risingwave-compose
