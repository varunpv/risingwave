# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- id: create_table
  sql: |
    create table t1 (c1 INT, c2 INT, c3 INT);
- id: short_circuit_or_pattern
  before:
  - create_table
  sql: |
    select true or 'abc'::int > 1;
  logical_plan: |-
    LogicalProject { exprs: [(true:Boolean OR ('abc':Varchar::Int32 > 1:Int32)) as $expr1] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }
  batch_plan: 'BatchValues { rows: [[true:Boolean]] }'
- id: short_circuit_and_pattern
  before:
  - create_table
  sql: |
    select false and 'abc'::int > 1;
  logical_plan: |-
    LogicalProject { exprs: [(false:Boolean AND ('abc':Varchar::Int32 > 1:Int32)) as $expr1] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }
  batch_plan: 'BatchValues { rows: [[false:Boolean]] }'
- id: short_circuit_or_pattern_with_table
  before:
  - create_table
  sql: |
    select true or 'abc'::int > c1 from t1;
  logical_plan: |-
    LogicalProject { exprs: [(true:Boolean OR ('abc':Varchar::Int32 > t1.c1)) as $expr1] }
    └─LogicalScan { table: t1, columns: [t1.c1, t1.c2, t1.c3, t1._row_id] }
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchProject { exprs: [true:Boolean] }
      └─BatchScan { table: t1, columns: [t1.c1], distribution: SomeShard }
- id: short_circuit_and_pattern_with_table
  before:
  - create_table
  sql: |
    select false and 'abc'::int > c1 from t1;
  logical_plan: |-
    LogicalProject { exprs: [(false:Boolean AND ('abc':Varchar::Int32 > t1.c1)) as $expr1] }
    └─LogicalScan { table: t1, columns: [t1.c1, t1.c2, t1.c3, t1._row_id] }
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchProject { exprs: [false:Boolean] }
      └─BatchScan { table: t1, columns: [t1.c1], distribution: SomeShard }
- id: short_circuit_optimize_time
  sql: |
    select true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true and true;
  logical_plan: |-
    LogicalProject { exprs: [(((((((((((((((((((((((((true:Boolean AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) AND true:Boolean) as $expr1] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }
  batch_plan: 'BatchValues { rows: [[true:Boolean]] }'
